#include <Adafruit_NeoPixel.h>
#include <avr/power.h>

#define PIN 1

Adafruit_NeoPixel strip = Adafruit_NeoPixel(5, PIN, NEO_GRB + NEO_KHZ800);

int sensorPin = A1;    // select the input pin for the potentiometer, analog 1 on GEMMA is digital 2
int sensorValue = 0;  // variable to store the value coming from the sensor

void setup() {
  // declare the ledPin as an OUTPUT:
  pinMode(PIN, OUTPUT);
  strip.begin();
}

void loop() {
  // read the value from the sensor:
  sensorValue = analogRead(sensorPin);

  uint16_t i, j;
  for (j = 0; j < 256; j++) {
    for (int i = 0; i < strip.numPixels(); i++) {

      // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255
      //in this case we have a rainbow effect 
      strip.setPixelColor(i, Wheel(((i * 256 / strip.numPixels()) + j) & 255)**);


      strip.show();
    }
  }
 delay(sensorValue);
  
  strip.setPixelColor(0, strip.Color(0, 0, 0));
  strip.setPixelColor(1, strip.Color(0, 0, 0));
  strip.setPixelColor(2, strip.Color(0, 0, 0));
  strip.setPixelColor(3, strip.Color(0, 0, 0));
  strip.setPixelColor(4, strip.Color(0, 0, 0));
  strip.show();
  delay(sensorValue);
}




uint32_t Wheel(byte WheelPos) {
  WheelPos = 255 - WheelPos;
  if (WheelPos < 85) {
    return strip.Color(255 - WheelPos * 3, 0, WheelPos * 3);
  } else if (WheelPos < 170) {
    WheelPos -= 85;
    return strip.Color(0, WheelPos * 3, 255 - WheelPos * 3);
  } else {
    WheelPos -= 170;
    return strip.Color(WheelPos * 3, 255 - WheelPos * 3, 0);
  }
}

